# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: ID!
  name: String!
  description: String
  userId: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SecretEntity {
  id: ID!
  expiresAt: DateTime
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserAttribute {
  key: String!
  value: JSON
  defaultValue: JSON
  isActive: Boolean!
  type: AttributeType!
  min: Float
  max: Float
  minLength: Float
  maxLength: Float
  pattern: String
  required: Boolean
  maxDate: DateTime
  minDate: DateTime
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

"""Tipos posibles de atributos"""
enum AttributeType {
  STRING
  NUMBER
  BOOLEAN
  DECIMAL
  LIST
  JSON
  DATETIME
  UUID
}

type PwdAdmin {
  id: ID!
  expiresAt: DateTime
  isActive: Boolean!
  mustChange: Boolean!
  alertDay: Int
  howOften: Int
  changeLastAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserRole {
  id: ID!
  isActive: Boolean!
  user: User!
  role: Role!
}

type User {
  id: ID!
  email: String!
  nickname: String
  name: String
  birthdate: DateTime
  phone: String
  isDeleted: Boolean!
  isActive: Boolean!
  avatar: String
  googleId: String
  microsoftId: String
  facebookId: String
  githubId: String
  appleId: String
  otherId: String
  apiUserId: String
  apiUser: User
  users: [User!]
  roles: [Role!]
  userRoles: [UserRole!]
  secrets: [SecretEntity!]
  pwdAdmins: [PwdAdmin!]
  attributes: [UserAttribute!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GenerateSecretResponse {
  secret: String!
  secretData: SecretEntity!
}

type ValueAttribute {
  value: JSON
}

type Query {
  secret: SecretEntity!
  users: [User!]!
  user(id: ID!): User!
  roles: [Role!]!
  role(id: ID!): Role!
  userAttributes(userId: ID!): [UserAttribute!]!
  userAttribute(id: ID!): UserAttribute!
}

type Mutation {
  generateSecret(createSecretInput: CreateSecretInput!): GenerateSecretResponse!
  removeSecret: Boolean!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  createRole(createRoleInput: CreateRoleInput!): Role!
  assignRoleToUser(roleId: ID!, userId: ID!): UserRole!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  removeRole(id: ID!): Role!
  createUserAttribute(createUserAttributeInput: CreateUserAttributeInput!): UserAttribute!
  updateUserAttribute(updateUserAttributeInput: UpdateUserAttributeInput!): UserAttribute!
  updateValueUserAttribute(updateValueUserAttributeInput: UpdateValueUserAttributeInput!): ValueAttribute!
  removeUserAttribute(id: ID!): UserAttribute!
  updatePwdAdmin(updatePwdAdminInput: UpdatePwdAdminInput!): PwdAdmin!
}

input CreateSecretInput {
  expiresAt: DateTime
}

input UpdateUserInput {
  id: ID!
  email: String
  nickname: String
  name: String
  phone: String
  birthdate: DateTime
  avatar: String
  googleId: String
  microsoftId: String
  facebookId: String
  githubId: String
  appleId: String
  otherId: String
  isActive: Boolean
}

input CreateRoleInput {
  name: String!
  description: String
}

input UpdateRoleInput {
  name: String
  description: String
  id: ID!
}

input CreateUserAttributeInput {
  key: String!
  defaultValue: JSON
  isActive: Boolean = true
  type: AttributeType!
  min: Float
  max: Float
  minLength: Float
  maxLength: Float
  pattern: String
  required: Boolean = false
  maxDate: String
  minDate: String
  userId: ID!
}

input UpdateUserAttributeInput {
  key: String
  defaultValue: JSON
  isActive: Boolean = true
  type: AttributeType
  min: Float
  max: Float
  minLength: Float
  maxLength: Float
  pattern: String
  required: Boolean = false
  maxDate: String
  minDate: String
  userId: ID
  id: ID!
  value: JSON
}

input UpdateValueUserAttributeInput {
  id: ID!
  value: JSON
}

input UpdatePwdAdminInput {
  userId: String
  id: ID!
  password: String
  alertDay: Int
  howOften: Int
  changeLastAt: DateTime
  expiresAt: DateTime
  isActive: Boolean
  mustChange: Boolean
}